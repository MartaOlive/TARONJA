<!DOCTYPE html>
<html lang="en">

<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <link rel="stylesheet" href="../tapis.css">
</head>

<body>

  <form>
    Aggregate columns:
    <span id="DialogAggregateColumnsHTML">
      <br>
      <label for="columnName">Column Name </label>
      <input id="columnName" type="text" style="margin-top: 10px; margin-bottom: 10px; ">
      <br>
      <div>
        <fieldset id="columnsFielset" style="display:inline-block">
          <legend>Select your variables/columns:</legend>


          <input type="checkbox" id="scales" name="scales" checked />
          <label for="scales">Scales</label>
          <br>


          <input type="checkbox" id="horns" name="horns" />
          <label for="horns">Horns</label>

        </fieldset>
        <fieldset id="operationsFieldSet" style="display:inline-block">
          <legend>Select your operation:</legend>
          <input type="radio" id="sum" name="TypeOfValues" value="sum" checked>
          <label for="sum">Sum</label><br>
          <input type="radio" id="product" name="TypeOfValues" value="product">
          <label for="product">Product</label><br>
          <input type="radio" id="minimalValue" name="TypeOfValues" value="minimalValue">
          <label for="minimalValue">Minimal Value</label><br>
          <input type="radio" id="maximalValue" name="TypeOfValues" value="maximalValue">
          <label for="maximalValue">Maximal Value</label><br>
          <input type="radio" id="meanValue" name="TypeOfValues" value="meanValue">
          <label for="meanValue">Mean Value</label><br>
          <input type="radio" id="variance" name="TypeOfValues" value="variance">
          <label for="variance">Variance</label><br>
          <input type="radio" id="median" name="TypeOfValues" value="median">
          <label for="median">Median</label><br>
        </fieldset>
        <br>
        <button value="add" onClick="addColumnToListAggregateColumns(event)" style="margin-bottom:10px">Add column to
          list </button>
        <div style="width:auto;border:solid black 1px ">
          <label>Columns to add</label>
          <div id="columnsBox" style="border:solid black 1px">
            <table class="tableInAddColumns" id="columnsBoxTable">
              <tr>
                <th>Operation</th>
                <th>Column name</th>
                <th>Columns</th>
                <th></th>
              </tr>
            </table>
          </div>
        </div>
      </div>
    </span>
    <div class="center">
      <button value="default" onClick="addColumnsToTableInAggregateColumns(event)">OK</button>
      <button value="cancel" formmethod="dialog">Cancel</button>
    </div>
  </form>
  <script>
   // [1, 3, 5, 6, 7, 8, 2, 2,3,44,6,9,10,10,10,1]
    var modaaaa = aggrFuncMode(["patates","pesols","patates","castanyes"]);
    console.log(modaaaa)

    function aggrFuncMode(values) {
      var numberValueArray=[];//[value of mode], one or more
      var summaryOfData={}; //Object. Every key is a value, every value of the key is the number of repetitions
      var numberOfRepetitions, maxNumberOfRepetitions=0, mode;
      for (var i = 0; i < values.length; i++) { //creating summaryOfData object
        if (summaryOfData[values[i]]) {
          numberOfRepetitions = summaryOfData[values[i]];
          summaryOfData[values[i]] = numberOfRepetitions+ 1;

        }else{ //First appearance
          summaryOfData[values[i]]=1;
        }
      }

      var objectKeys=Object.keys(summaryOfData); //every key is a different value from values

      for (var a=0;a<objectKeys.length;a++){ //Searching value with more repetitions
        if (summaryOfData[objectKeys[a]]==maxNumberOfRepetitions){
          numberValueArray.push(objectKeys[a]);//several with same number
        }else if (summaryOfData[objectKeys[a]]>maxNumberOfRepetitions){
            numberValueArray=[objectKeys[a]]; //add moda value 
            maxNumberOfRepetitions = summaryOfData[objectKeys[a]]; //update number max
        }
      }
      mode=numberValueArray; //One value or more, always in a array;
     
      return mode;

    }
  </script>
</body>

</html>